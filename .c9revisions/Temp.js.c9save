{"ts":1368212151966,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1368212418944,"patch":[[{"diffs":[[1,"function() {\n    $(document).ready(function() {\n        var a, b, d, e, g, m, n = client.dataModel,\n            o = \"craft_\" + n.model.queryParams.categoryName.toLowerCase();\n        if (!client.dataModel.model.craftinglist || !client.dataModel.model.craftinglist[o]) return;\n        a = client.dataModel.model.craftinglist[o].entries;\n        if (!a) return;\n        b = new h, d = [];\n        for (e = 0; e < a.length; e++) {\n            if (typeof a[e] == \"undefined\") continue;\n            g = a[e].header.toLowerCase(), m = [g === \"rare\" ? 2 : g === \"common\" ? 3 : 9, a[e].isheader ? 1 : 0, 0, a[e].isheader ? 0 : a[e].failslevelrequirementsfilter ? 1 : 0, a[e].isheader ? 0 : a[e].failsresourcesrequirements ? 1 : 0, \"\", '<div data-set-class=\"task-list-entry\"></div>'],\n            function(a, c, d) {\n                c.isheader || b.add(function(b) {\n                    client.dataModel.resolvePath(\".hdef.requiredrank\", c, function(c, d) {\n                        a[2] = d, b()\n                    })\n                }), b.add(function(b) {\n                    client.dataModel.resolvePath(\".hdef.displayname.str\", c, function(c, d) {\n                        a[5] = d, b()\n                    })\n                }), b.add(function(b) {\n                    n.render(l[\"content-professions-tasklist-task\"], \"content-professions-tasklist-task\", \".craftinglist.\" + o + \".entries[\" + d + \"]\", function(c, d) {\n                        a[6] = d.join(\"\"), b()\n                    })\n                })\n            }(m, a[e], e), d.push(m)\n        }\n        b.waitForAll(function() {\n            c = undefined, $(\"table#tasklist\").dataTable({\n                bDestroy: !0,\n                bSortClasses: !1,\n                bLengthChange: !1,\n                iDisplayLength: 8,\n                oLanguage: {\n                    sEmptyTable: \"There are no tasks\"\n                },\n                aaData: d,\n                aoColumns: [{\n                    bVisible: !1,\n                    bSearchable: !1,\n                    sType: \"numeric\"\n                }, {\n                    bVisible: !1,\n                    bSearchable: !1,\n                    sType: \"numeric\"\n                }, {\n                    bVisible: !1,\n                    bSearchable: !1,\n                    sType: \"numeric\"\n                }, {\n                    bVisible: !1,\n                    bSearchable: !1,\n                    sType: \"numeric\"\n                }, {\n                    bVisible: !1,\n                    bSearchable: !1,\n                    sType: \"numeric\"\n                }, {\n                    bVisible: !1,\n                    bSearchable: !0,\n                    sType: \"string\"\n                }, {\n                    bVisible: !0,\n                    bSearchable: !1,\n                    sType: \"html\"\n                }],\n                aaSorting: [\n                    [0, \"asc\"],\n                    [1, \"desc\"],\n                    [2, i]\n                ],\n                oSearch: {\n                    sSearch: k\n                },\n                aoSearchCols: [null, null, null, {\n                    sSearch: j.hide_abovelevel ? \"0\" : \"\",\n                    bRegex: !1,\n                    bSmart: !1\n                }, {\n                    sSearch: j.hide_unmetreqs ? \"0\" : \"\",\n                    bRegex: !1,\n                    bSmart: !1\n                },\n                null, null],\n                bStateSave: !0,\n                fnStateSave: function(a, b) {\n                    f.startCountdowns(), k = b.oSearch.sSearch\n                },\n                fnInitComplete: function() {\n                    var a;\n                    c = this;\n                    for (a in j) j[a] ? $(\"input[name='\" + a + \"']\").attr(\"checked\", !0).closest(\"label\").addClass(\"checked\") : $(\"input[name='\" + a + \"']\").attr(\"checked\", !1).closest(\"label\").removeClass(\"checked\");\n                    $(\"input[type='radio'][value='\" + i + \"']\").attr(\"checked\", !0).closest(\"label\").addClass(\"checked\")\n                }\n            }), client.onAfterSetStencil()\n        })\n    }), this.handleCheckBox = function(a) {\n        j[a.attr(\"name\")] = a.is(\":checked\"), f.professionTaskFilterChange(a)\n    }, this.handleRadioButton = function(a) {\n        i = a.val(), f.professionTaskSortChange(a)\n    }\n}"]],"start1":0,"start2":0,"length1":0,"length2":4313}]],"length":4313,"saved":false}
